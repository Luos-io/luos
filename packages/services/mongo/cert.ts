import crypto from 'crypto';

if (!process.env.SERVICE_ENCRYPTION_KEY || !process.env.SERVICE_ENCRYPTION_IV) {
  throw new Error('Missing SERVICE_ENCRYPTION_* environment variables.');
}

export const encryptedMongoDBCert =
  process.env.VERCEL_ENV === 'production'
    ? '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'
    : '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';
export const encryptedMongoDBKey =
  process.env.VERCEL_ENV === 'production'
    ? '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'
    : 'APi1D4RMWKerbZ2k9N95QHmVK+MH0ju543Wa8AR7uQNJjal1s/VbP4o75dsJXFn5bPPPJXQJrch5/ic4WrCE29szXS149luCzMiJao8eMKW1Nn+D0vwQRhPQDjEUKTRAYJDsAEopHxVNv9JqNSNA+ayx6+fxy2FhpDLBj+AuHandXY0+J1u/jifqxmRqUDKINYQF8hwLgNwYsLeVNC9+6JW1B3DCiCsQX22ATvfOfvh4td6i2LrvwILakMMK9eFX9CrcOhwMfZTqOd1MvcMKANXe++sUlfbYDlAAKxFX/wh6/c5qRgnztlBrJ2XOlDF4hR/DtW+NDTmQpMvCZmvmuWFiMrrfUcPrbWeyVoeAoNbT+p3jyWkULX7azOkmi/KIbwunEDj3bPzbPzCSRCLPEO7SZdhV4HxGrU4JhTsARRThGJ0S0dJ+Cr0Whb1w/taI+NFi5DfghSQF+yowr8iHCBQ0XXuVKng+yMMB864fgpB76DgDNAMfjJs4OsHEJnL2nHS1pjEvtHCyrlgJ1edIt+em3Xym/qTUd2vHiXblReuBYXnIe2m5WOUI6FOn+jRtkKfDSBPF+FX3jfAIKD5wQlcQcwrMXIMY1JutinMFxjG9Vy3k9R9GH8y3bcJ/LD8l+weiyFsI2gsYavPlgJ12woKfSwNkFZIVUWSdp0PYDtvbYtAJfF++c2TPILQNRu/A9P8TBQiUukny51gBj8/17l/qYijseY4dxNC28ExcEhEFa3XrNHD8UBQFH7crFVS2eHUaXdZ3wW/0VL+232dbNE3ussDHp12JduvgbP8TRYgBCbZcSL+9u7tDD/MMqfQr8OUtjkYi+BmSK+AXFEvG8ZDFHfeoXAV6A3rQjxrn2dgMO73hF/dzx97Ur0v2Yx4snpJ44n0fvyZ3mZcim4cfZumJkAA4JGjEg2NMHbF8QTVJ50KsBkQxhx8rp/QgSC3aLKE/iLlzJjYc0jEmk/Xp59AiVcD5YT5KdPBn4wAYDjR5+apzFKpCfpEZpz/0f1NF0dIjn1wGIG5PaVgjWA7Nly6remQ3yV9xyS3OwIAuJCgIJVVpQPNGec9qbERmCRTm4ZW4LeyLNEwP3q1jNBZV6PmrRa75auGkB43dfhddGgdrCmO3B9pbfEANPJmu2ZVS1Qoi3nnIj80l8TIRCjgkPv0VC0LQavp5hCqFyZGzYem3NlYRLoZ4mBddnKExrSOOgwlDGdDFpdKegmKxS6vIDOldFFrkX1H+KvW0cDNLGosjMFmWBHVTuvfHug3Rfn8B5l1myU+cIi5EfRCPhZu46oTtLxApEii2vymwjQWUVofsoYgrkp3F5Rf7J9Ig3u4BYCN7ma7SztZtBmmH13IGXCarClQMw5rE07fqMNiX6eqNfGWqpMZwcgZW01Uglrh1YCG5rBoty5QYcMRfzTm/ir0WrtgApYdbH6p9Mx+0vm63QrXDJhFD90W4R+73klVoeT9Odnp1KHi5lCPcEEck9UwDCVKw0mHRI8vhqxA2KSJqPHzdIUAYP4Ls8rzm0CZaagdUzERLuWYcL41hwcbkMeWql8tZ1AiAwq3SwRgO2gnUlWBcMUKgZCShJz8B72SaIWBBF86e44FrQYKNNxTY7kXtKkdqyANR1i9Wxld/xBE7Jd0CaxsjI3u9RKPpw8SdXvdGm7pgfaSSiyJvWp6sL0MnoLI6kL9/6qxmMVHj5COA9FACTKI7laMarBp2ootwSUYackKudS58gCR039jlg1/T/sLmzeqBYkweVnMOGDwd76zM+/MkLyVJ80o0OMDBzdSAgPzQaLdlpRTTe+4IBZwYGVs90mAs0DxH0azoHDP++4Ks2m1cfEq8tNgL7NNUmFXR2U/bQHA3ts7ZWge2uP17Nhq9vPvYCJmo5D4969MNUy6xVhp/24N/bfrbzu2YrInF5N96CxkZAnQsX8nnkEs2yPeF+6Iv5o4Y8Hxd6gXPc8/WoQnIYCFvx2tznayInEe44WOmQ1QQKUnYFvHf6r2q35z9sAauvRY0G/xdMkrD4yStS6DcZRS6jX3PkRCGKBVLz1A1sUtJf1scJHnI3bSxaArGPA4/5+n+PVpTlD/LONV/RxAjnt5rCilEBGfqroKq0j95dLGiHDwLWzU5h1bpa58r/fFRdal2dV+TNy96j8jDlNJR9xKjleVQQIG7ccp8cW+IizgQqwuPawaTWtU6XwesKu0VQ03TK+CkNo/NTGQ/eDQXueXPU5bfXQkAy8dIkWzgwlSG7Ezk2nqOnD1K850rNYxUTLwA2SoYTAZRwTeE+qC8LJGNw06bAp7REcgsg1/UfQAOxZRDEYKDP8iPKo84xZBG56/PT02hYIDjEFVVKXfUP4J2DFu8SCqm9QDCkRBhKwp35frtM/IMkbEQnS8zKdvZ2uGPRii6Bb+E4r+W/P8pk7S+EOWBvKOtwoh40yBrMZajIB/CozIOmk2V2dDoy65PPknVCiczl1OngJefJOpF365FP+Xhnes2/abmzJuGX3sRPL9+9q5WFO2kUVxGbyr0ByLHMg/UDhqxH2Nq57+2FeXHaf8Jg0wJ6eyQ6jtd3hqkKRfE1YAcpQsjTSjJ/6NXICyYDZccXEPxyBVcX3J3DqztdxdxkRziLZVriTBL3+gs1qc5dTR3nXwvOV3WC7RFi7n21toemAfq1CmgJQH5cSdkfQR3H4W/sU1ADLakJciE2M2Rk1YwII+qo9jdBPQaZgzXfT14Ik+UNyhjcxr/mSfr56UVAUFxNc7tOZKz2lO7T7IoaUavcVTqkWZO+aV8JK+vQsRrIfHTC3pZtoQ2q+I6oFV5GR6JFz0OXJMXmdCjyMolf/DqRlXHQvUtk29YBj6azeajoKG6ySlP9ObRCZObfSyWs1K2rojD34GUhdXhtTcVgM+XEkJvUe4e3yDrFxyHj5q2ddxUmG33QvM2ijXC+YoM3awGzXPZtXqDGPI0XDbU/zpBJE/G/mQ9VfWgjBFgnKz8gr1MPKefSd7bVOVAwwV+dUjOqHuk+7ZjR/f1Lv6CKFqR+T7C0HLmSdKGj603vvPlMd4lucU+egP52rqz+KDU2gm6mycgM2iTGK96Dv8ouJ2lEPsD0E8r+XXRijipcYNCA8XY0rwNnmEPeVApB5U7RSgUW9f9+47wjAIeO7Ti2jpNcnmFud7MhUbbiTHg/tFSUGKqYvCX5CYycmh5zTEjcifdwAjlX8+zH8syMFQ0fhgrBgMFCSilNhjd0KALCBWPRqR7OhUMiwNL72eC9it7MpkEs1khpuX5jupHEwTauhbl0Ga3FiiH50iVvu/l1O2yJiB3hWhwO1vQEy2FdQYYufs9pZe7DAZjK5Ub/5gXkzDyu1qTgK0I2eKGOtXmeRimy/GPA/VzvClth6KCz350KRL5YcjjEcXhh9MC+ErFW2x2eI0D2dsPHDBECYBc8ax/tLNO84u/K2gsPauEiEkD/Ufw5bJDtP88afkmz+IeDBLRin28a5MtWVYMkgapGhohy3pzPCozUgh81y8VEzDHU3wCoUtPBvqEsaNdPl7tkGJeLAqkodK1BegI6JcCi0coCNksPhBE7AA67sBfatWJL63WF4uwkJtTXo1PjaHMlzOiJJrPQy6pqAvGwoYMRIA1OW9dGvZT85xh2IiCCCvoo/7H1qVWSlknD1dsOs8l9lkBUsHISbXPOANN/5Rz+27EyvihgM/Fs13yjw6lG7kXHygXZipjzdW2ViBLzG4TCFdYzyHq0BhvgbN+DoNZHINwQ/uuZzZYFStB9yykzD56LlhBg6fpM1OWflqGEIRpWL/0yOdhvn5+N9bwWYW/4JrhIRbjtBjSMICuRT/+yoYOxJV5OC470lVWDmiGmUvZ32lvCYt6rMO3YGyYC+8tpjCe4oMCRG1wpyV6XauNbZSMhdEHyR5ifVJP1s3X9kpJIXs0EEJFFoaCayOuBMWMuS7zwd5InSPkymaFrFGJM8WVgCOJbFsYb+Y1qfRQoFtC4Axl1KHCEby7+o7mPDn0vaKuQRZG1rG424lTDXXKfboBIOnZuZcJYz7DZzvmpsxHrWpWm4i+X9XivjrJD7S6GoWWVfFXSgOjvkuUt2N1iC0B4+SfckPoZ07vIleUhsVtH4NtZ5ZAxCW9o1t0KMVOQRTjy3wWIg/wnawNUc9VkOQ2TIB7VamusGNxxM3T3xvYcWR1vg7dMFsll3EI5Ml+RkRtowmN72ezmcY3IpGg6uslghcRYczU57niPkRnKvZ17BUqPlIRYEvLOWHxnmgZ2gZA3LbbgE04QkABOfg1DzOB0l1CB8HZiBYl8DM9pBw7/pqOfy94+jbUrO9DkemQEqCGjmvKSVw1SUFhoaIf5oXGfHrFD7TKLY2zzfTUBHpHze4p3A==';

// Decrypt Mongo certificate
const decipherCert = crypto.createDecipheriv(
  'aes-128-cbc',
  process.env.SERVICE_ENCRYPTION_KEY,
  process.env.SERVICE_ENCRYPTION_IV,
);
export let decryptedMongoDBCert = decipherCert.update(
  encryptedMongoDBCert,
  'base64',
  'utf8',
);
decryptedMongoDBCert += decipherCert.final('utf8');

// Decrypt Mongo key
const decipherKey = crypto.createDecipheriv(
  'aes-128-cbc',
  process.env.SERVICE_ENCRYPTION_KEY,
  process.env.SERVICE_ENCRYPTION_IV,
);
export let decryptedMongoDBKey = decipherKey.update(
  encryptedMongoDBKey,
  'base64',
  'utf8',
);
decryptedMongoDBKey += decipherKey.final('utf8');

export const mongoDbCert = {
  encryptedMongoDBCert,
  encryptedMongoDBKey,
  decryptedMongoDBCert,
  decryptedMongoDBKey,
};
export default mongoDbCert;
